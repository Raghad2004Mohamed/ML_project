# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16oUiJOD3ZnP8TDI02x3QWWhc4CdwvPGL
"""

import streamlit as st
import pandas as pd
import pickle
import numpy as np
import os
import matplotlib.pyplot as plt

# Set max upload size
st.set_option('server.maxUploadSize', 200)

# Title and description
st.title("üß† EEG Seizure Detection Web App")
st.markdown("""
Welcome to the EEG Seizure Classifier App!
Upload your EEG data in CSV format and get predictions using a trained machine learning model.
""")

# Sidebar for model selection
st.sidebar.header("‚öôÔ∏è Model Options")
model_option = st.sidebar.selectbox(
    "Choose model source",
    ("Use default model", "Upload custom model (.pkl)")
)

# Load model
model = None
if model_option == "Use default model":
    try:
        with open("model.pkl", "rb") as f:
            model = pickle.load(f)
        st.sidebar.success("‚úÖ Default model loaded.")
    except Exception as e:
        st.sidebar.error(f"‚ùå Error loading default model: {e}")
else:
    uploaded_model = st.sidebar.file_uploader("Upload your model (.pkl)", type=["pkl"])
    if uploaded_model:
        try:
            model = pickle.load(uploaded_model)
            st.sidebar.success("‚úÖ Custom model loaded.")
        except Exception as e:
            st.sidebar.error(f"‚ùå Failed to load model: {e}")

# Sample data download
st.markdown("üìé [Download sample CSV](https://archive.ics.uci.edu/ml/machine-learning-databases/00388/data.csv) to test the app.")

# Upload CSV data
st.subheader("üìÑ Upload EEG Data")
uploaded_file = st.file_uploader("Upload EEG CSV file", type=["csv"])

if uploaded_file is not None and model is not None:
    try:
        df = pd.read_csv(uploaded_file)

        st.success("‚úÖ File uploaded successfully!")
        st.subheader("üìä Data Preview")
        st.dataframe(df.head())

        # Drop label if exists
        X = df.drop(columns=["y"]) if "y" in df.columns else df

        # Run predictions
        prediction = model.predict(X)

        # Map class numbers to readable names (optional)
        class_names = {
            1: "Seizure",
            2: "No Seizure ‚Äì Eyes Open",
            3: "No Seizure ‚Äì Eyes Closed",
            4: "No Seizure ‚Äì Mental Activity",
            5: "No Seizure ‚Äì Visual Stimulation"
        }
        prediction_labels = [class_names.get(p, f"Class {p}") for p in prediction]

        st.subheader("üîÆ Prediction Results")
        st.write(prediction_labels)

        # Plot pie chart
        st.subheader("üìà Prediction Summary")
        result_counts = pd.Series(prediction_labels).value_counts()

        fig, ax = plt.subplots()
        ax.pie(result_counts, labels=result_counts.index, autopct='%1.1f%%', startangle=90)
        ax.axis("equal")
        st.pyplot(fig)

    except Exception as e:
        st.error(f"‚ùå An error occurred: {e}")

elif uploaded_file is not None and model is None:
    st.warning("‚ö†Ô∏è Please load a model before uploading data.")

else:
    st.info("Upload your CSV file to get started.")